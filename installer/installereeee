#!/bin/bash

# created by purnomo hadi 
# installation tools for kolomonggo linux and dracOs linux 
# under GPL 2 / newer licency 
# coyright april 2018 


. /lib/.config
. /lib/msg 
. /lib/livekitlib

readonly COMMAND="$0"

readonly SETUP_ARCH="`uname -m`"
readonly VERSION="1.0"

MEMORY=/memory
CHANGES=$MEMORY/changes
UNION=$MEMORY/union
DATAMNT=$MEMORY/data
BUNDLES=$MEMORY/bundles

TMP=/tmp/tmp
if [ ! -d $TMP ]; then
  mkdir -p $TMP
fi

echo "//   checking installation of dialog"

if [ -e "$UNION/usr/bin/dialog" ]; then
  echo "//   dialog found, skipping"
else
        
       echo "//   dialog not found "
        echo "//   installing from pre-installed" 
	cp-gnu -pR /pkg/dialog/* /$MEMORY/union 2>/dev/null
fi 
sleep 3

clear

KERNEL_MODULES="$(uname -r)"

PWDN=$(pwd)

##################
#### function ####
##################


print_help() {
        echo -e $white
        clear
	echo ""
        echo " 01      110101   01011           "
        echo " 10      01      11                 "
        echo " 00      010000   10101  "
        echo " 11      00           01  "
        echo " 011101  10       01001  "
        echo""
        echo "installer  for lfs based os"
        echo "created by purnomo hadi fb:purnomo.shinigami purnomo.shinigami@gmail.com ,"
        echo "under GPLv2 or later license. LFS based OS with AUFS and squashfs tools . "
        echo ""
        echo -e $white"usage: `basename $COMMAND` [options]"
	echo "options"
	echo ""
        echo " --run      	 run the installation"
        echo " -h,   --help      Show the help"
	echo " -v,   --version   Show the version"

}

greeting() {
        clear
	echo ""
        echo " 01      110101   01011           "
        echo " 10      01      11                 "
        echo " 00      010000   10101  "
        echo " 11      00           01  "
        echo " 011101  10       01001  "
        echo""
	if [ "$LIVEKITNAME" == "dracOs" ]; then
		echo ""
		echo "  $DISTNAME is the Linux operating system from Indonesia Open source."
        	echo "  is built based on the Linux From Scratch under the protection of the"
        	echo "  GNU General Public License v3.0. This operating system is one variant "
                echo "  of Linux distributions, which is used to perform security testing "
                echo "  (penetration testing). $DISTNAME in Arm by hundreds hydraulic pentest,"
                echo "  forensics and reverse engineering. Does not use a GUI-based tools-tools"
                echo "  and just have the software using the CLI (command line interface). "
        	echo "  Now  $DISTNAME currently already up to version $VER_OS with the "
		echo "  code name $CODE_NAME."
        	echo "  Website :https://www.dracost-linux.org Forum : https://forum.dracos-linux.org "
                echo "  OurTeam :https://dracos-linux.org/team/"
        	echo ""
	elif [ "$LIVEKITNAME" == "kolomonggo" ]; then
		echo ""
		echo "  $DISTNAME is the Linux operating system from Indonesia Open source. "
        	echo "  is built based on the Linux From Scratch under the protection of the"
        	echo "  GNU General Public License v3.0. This operating system is one "
		echo "  variant of Linux distributions. Now $DISTNAME currently already up to "
                echo "  version $VER_OS with the code name $CODE_NAME."
        	echo "  Website :https://kolomonggolinux.pe.hu"
        	echo ""
	else
		echo ""
		echo " $DISTNAME is the Linux operating system. is built based on the Linux From Scratch "
              	echo " under the protection of the GNU General Public License v3.0. This operating  "
        	echo " system is one variant of Linux distributions, to perform its operations. "
        	echo " Now $DISTNAME currently already up to version $VER_OS with the code name $CODE_NAME."
	        echo ""
	fi

    read -rsp $'Press any key to continue...\n' -n1 key


}

tweaking() {
	dialog --clear --backtitle "$BACK_TITLE  "  --title "-- ROOT password --" --colors --yesno "\n Do you want to change root password   " 10 40
	if [ $? = 0 ] ; then
		clear
		chroot  /mnt/`cat $TMP/pout | cut -b 6-9` /bin/passwd root 
	fi

        dialog --clear --backtitle "$BACK_TITLE  "  --title "-- TWEAKS --" --colors --yesno "\n running tools like time zone, keyboard, etc.   " 10 40
		if [ $? = 0 ] ; then
		clear
		chmod 755   /mnt/`cat $TMP/pout | cut -b 6-9`/usr/bin/lfs-tools 2>/dev/null
		chroot   /mnt/`cat $TMP/pout | cut -b 6-9`/usr/bin/lfs-tools --all
	fi

} 
select_disk() {
	umount /mnt/* 2>/dev/null


# run cfdisk to partition the harddrive
dialog --clear --backtitle "$BACK_TITLE "  --title "-- PARTITION THE HARDDISK --" --colors --yesno "$MSG_CFDISK" 20 110
if [ $? = 1 ] ; then
exit
fi

# Create partitions using fdisk or cfdisk.
echo expert-mode >> /etc/expert-mode
mkdir /tmp/tmp 2>/dev/null
TMP=/tmp/tmp 2>/dev/null

#fdisk -l | sed -n 's/^Disk \(\/dev\/[^:]*\): \([^,]*\).*$/"\1" "\2" \\/p' >> $TMP/drivelist
fdisk -l | sed -n 's/^Disk \(\/dev\/[^:]*\): \([^,]*\).*$/"\1" "\2" \\/p' | grep  -e sd >> $TMP/drivelist
fdisk -l | sed -n 's/^Disk \(\/dev\/[^:]*\): \([^,]*\).*$/"\1" "\2" \\/p' | grep  -e hd >> $TMP/drivelist
while [ 0 ]; do
  echo dialog --ok-label Select \
    --cancel-label Continue \
    --title \"PARTITIONING\" \
    --menu \"Select drive to partition:\" 11 40 4 \\\
    > $TMP/tmpscript
  cat $TMP/drivelist >> $TMP/tmpscript
  echo "2> $TMP/tmpanswer" >> $TMP/tmpscript
  . $TMP/tmpscript
  [ $? != 0 ] && break
  PARTITION=`cat $TMP/tmpanswer`

  if [ ! -f /etc/expert-mode ]; then
    cfdisk $PARTITION
  else
    echo dialog --title \"PARTITIONING $PARTITION\" \
      --menu \"Select which fdisk program you want to use. cfdisk is \
      strongly recommended for newbies while advanced users may prefer fdisk.\" \
      15 60 3 \
      cfdisk \"Curses based partitioning program\" \
      fdisk \"Traditional fdisk\" \
      "2> $TMP/tmpanswer" > $TMP/tmpscript
    . $TMP/tmpscript
    [ $? != 0 ] && continue
    FDISKPROGRAM=`cat $TMP/tmpanswer`
    clear
    if [ "$FDISKPROGRAM" = "cfdisk" ]; then
      cfdisk $PARTITION
    elif [ "$FDISKPROGRAM" = "fdisk" ]; then
      fdisk $PARTITION
    fi
  fi
done
rm -f $TMP/drivelist $TMP/tmpscript $TMP/tmpanswer




}

formating() {

# format root partition
fdisk -l | grep Linux | sed -e '/swap/d' | cut -b 1-9 > $TMP/pout 2>/dev/null
partprobe `cat $TMP/pout |  cut -b 1-8` 

#lsblk -fpl  | awk '{print $1}' | grep -e "sd" -e "hd" > $TMP/disk-list 2>/dev/null

fdisk -l  | grep -e '^/dev/sd*'  -e '^/dev/hd*' | awk '{print $1 "   " $5 "   " $7 }' $TMP/disk-list 2>/dev/null
clear
echo ""
echo " installer has detected : "
echo ""

cat $TMP/disk-list 
echo ""
echo "In the next box you can choose the linux filesystem "
echo "for your root partition if you have more than one partitions!"


clear

#dialog --clear --backtitle "$BACK_TITLE "  --title " -- ROOT PARTITION DETECTED -- " --exit-label OK  --colors --msgbox "\n\n  $LIVEKITNAME  installer has detected \n\n $(cat d) \n\nas your   linux partition(s).\n\n In the next box you can choose the linux filesystem for your root partition or choose the partition if you have more than one linux partitions!" 20 80
#if [ $? = 1 ] ; then
#exit
#fi

# choose root partition
dialog --clear --backtitle "$BACK_TITLE "  --title " -- CHOOSE ROOT PARTITION -- " --colors --inputbox "\n\n Please give me your preferred   root partition  in this way:\n\n Write /dev/hdax \n  Example :  2 for   /dev/hda2 \n\nNOTE : \n x :  Number of the partition\n\n\n " 20 80 2> $TMP/pout

dialog --clear --backtitle "$BACK_TITLE "  --title " -- FORMAT ROOT PARTITION -- " --radiolist "Now you can choose the filesystem for your root partition.\n\n ReiserFS is the recommended filesystem. to /mnt/`cat $TMP/pout | cut -b 6-9`/" 10 70 0 \
"1" "ext2" off \
"2" "ext3" off \
"3" "ext4" on \
"4" "reiserfs" of \
2> $TMP/part
if [ $? = 1 ] ; then
exit
fi

if [ `cat $TMP/part` = "1" ] ; then
mkfs.ext2 `cat $TMP/pout`
dialog --clear --backtitle "$BACK_TITLE "  --title " -- FORMAT ROOT PARTITION -- " --colors --msgbox "\n\n Now your partition has been formatted with   ext2 filesystem." 10 70
echo "`cat $TMP/pout` / ext2 defaults,noatime 1 1" >> $TMP/SeTfstab2
# mount the root partition to copy the system
mkdir /mnt/`cat $TMP/pout | cut -b 6-9`
mount -t ext2 /dev/`cat $TMP/pout | cut -b 6-9` /mnt/`cat $TMP/pout | cut -b 6-9`
fi

if [ `cat $TMP/part` = "2" ] ; then
mkfs.ext3 `cat $TMP/pout`
dialog --clear --backtitle "$BACK_TITLE "  --title " -- FORMAT ROOT PARTITION -- " --colors --msgbox "\n\n Now your partition has been formatted with   ext3 filesystem." 10 70
echo "`cat $TMP/pout` / ext3 defaults,noatime 1 1" >> $TMP/SeTfstab2
# mount the root partition to copy the system
mkdir /mnt/`cat $TMP/pout | cut -b 6-9`
mount -t ext3 /dev/`cat $TMP/pout | cut -b 6-9` /mnt/`cat $TMP/pout | cut -b 6-9`
fi

if [ `cat $TMP/part` = "3" ] ; then
mkfs.ext4 `cat $TMP/pout`
dialog --clear --backtitle "$BACK_TITLE "  --title " -- FORMAT ROOT PARTITION -- " --colors --msgbox "\n\n Now your partition has been formatted with   ext4 filesystem." 10 70
echo "`cat $TMP/pout` / ext4 defaults,noatime 1 1" >> $TMP/SeTfstab2
# mount the root partition to copy the system
mkdir /mnt/`cat $TMP/pout | cut -b 6-9`
mount -t ext4 /dev/`cat $TMP/pout | cut -b 6-9` /mnt/`cat $TMP/pout | cut -b 6-9`
fi

if [ `cat $TMP/part` = "4" ] ; then
mkfs.reiserfs -f `cat $TMP/pout`
dialog --clear --backtitle "$BACK_TITLE "  --title " -- FORMAT ROOT PARTITION -- " --colors --msgbox "\n\n Now your partition has been formatted with   reiserfs filesystem." 10 70
echo "`cat $TMP/pout` / reiserfs defaults,noatime 1 1" >> $TMP/SeTfstab2
# mount the root partition to copy the system
mkdir /mnt/`cat $TMP/pout | cut -b 6-9`
mount -t reiserfs /dev/`cat $TMP/pout | cut -b 6-9` /mnt/`cat $TMP/pout | cut -b 6-9`
fi

# copy the system
dialog --clear --backtitle "$BACK_TITLE "  --title " -- COPYING THE SYSTEM -- " --colors --msgbox "\n\n $LIVEKITNAME Installer will now copy the running system to   your harddisk.\n\n Press OK to start ..." 10 70
if [ $? = 1 ] ; then
exit
fi
}

installtion_process() {



##########################
## installation prosses ##
##########################
clear
install_c
clear
echo "//   check os-prober is already installed"
cp-gnu -pR /custom/* /mnt/`cat $TMP/pout | cut -b 6-9`/ &>/dev/null

if [ -f "$UNION/usr/bin/os-prober" ]; then
	 echo "//   Os-prober not found . installing"
           
	cp-gnu -pR /os-prober/* /mnt/`cat $TMP/pout | cut -b 6-9`/ &>/dev/null
else 
        echo "//   Os-prober found . skipping"
fi

sleep 3







cd $UNION
mkdir /mnt/`cat $TMP/pout | cut -b 6-9`/dev 2>/dev/null
mkdir /mnt/`cat $TMP/pout | cut -b 6-9`/dev/pts 2>/dev/null
mkdir /mnt/`cat $TMP/pout | cut -b 6-9`/mnt 2>/dev/null
mkdir /mnt/`cat $TMP/pout | cut -b 6-9`/proc 2>/dev/null
mkdir /mnt/`cat $TMP/pout | cut -b 6-9`/sys 2>/dev/null
mkdir /mnt/`cat $TMP/pout | cut -b 6-9`/tmp 2>/dev/null
mkdir /mnt/`cat $TMP/pout | cut -b 6-9`/run 2>/dev/null
mkdir /mnt/`cat $TMP/pout | cut -b 6-9`/media 2>/dev/null

#cp /mnt/live/mnt/*/boot/vmlinuz /mnt/`cat $TMP/pout | cut -b 6-9`/boot/ 2>/dev/null

dialog --clear --backtitle "$BACK_TITLE "  --title " -- TRANSACTION FINISHED -- " --colors --msgbox "\n\n Now $LIVEKITNAME Installer has finished the transaction." 10 70
if [ $? = 1 ] ; then
exit
fi

# create new fstab
echo `cat $TMP/SeTfstab` > /mnt/`cat $TMP/pout | cut -b 6-9`/etc/fstab 2>/dev/null
echo `cat $TMP/SeTfstab2` >> /mnt/`cat $TMP/pout | cut -b 6-9`/etc/fstab 2>/dev/null

echo "proc /proc proc nosuid,noexec,nodev 0 0" >> /mnt/`cat $TMP/pout | cut -b 6-9`/etc/fstab 2>/dev/null
echo "sysfs /sys sysfs nosuid,noexec,nodev 0 0" >> /mnt/`cat $TMP/pout | cut -b 6-9`/etc/fstab 2>/dev/null
echo "devpts /dev/pts devpts gid=5,mode=620 0 0" >> /mnt/`cat $TMP/pout | cut -b 6-9`/etc/fstab 2>/dev/null
echo "tmpfs /run tmpfs defaults 0 0" >> /mnt/`cat $TMP/pout | cut -b 6-9`/etc/fstab 2>/dev/null
echo "devtmpfs /dev devtmpfs mode=0755,nosuid 0 0" >> /mnt/`cat $TMP/pout | cut -b 6-9`/etc/fstab 2>/dev/null


}

grub_install() {



# prepare installation of grub
mount --bind /dev /mnt/`cat $TMP/pout | cut -b 6-9`/dev
mount -t proc /proc /mnt/`cat $TMP/pout | cut -b 6-9`/proc

mount -vt devpts -o gid=5,mode=620 devpts /mnt/`cat $TMP/pout | cut -b 6-9`/dev/pts
mount -vt tmpfs tmpfs /mnt/`cat $TMP/pout | cut -b 6-9`/run
mount -vt sysfs sysfs /mnt/`cat $TMP/pout | cut -b 6-9`/sys
#cp-gnu --preserve -R /etc/grub.d.deb/* /mnt/`cat $TMP/pout | cut -b 6-9`/etc/grub.d/ 2>/dev/null
#cp -f /.bashrc  /mnt/`cat $TMP/pout | cut -b 6-9`/root/.bashrc

dialog --clear --backtitle "$BACK_TITLE "  --title " -- Installing GRUB Boot loader -- " --colors --radiolist "\n\n Now you can choose   install grub  or if you have   grub before  and use it please select   no .to /mnt/`cat $TMP/pout | cut -b 6-9`/" 10 70 0 \
"1" "yes" on \
"2" "no" off \
2> $TMP/part2
if [ $? = 1 ] ; then
exit
fi

  if [ `cat $TMP/part2` = "1" ] ; then

    dialog --backtitle "$BACK_TITLE "  --title " -- Installing GRUB Boot loader -- " --colors --msgbox "\n\n   Grub-install `cat $TMP/pout |  cut -b 1-8` --force --boot-directory=/mnt/`cat $TMP/pout |  cut -b 6-9`/boot" 10 75
   
   chroot /mnt/`cat $TMP/pout |  cut -b 6-9`/sbin/grub-install `cat $TMP/pout |  cut -b 1-8` --force --boot-directory=/boot

     ################################################
     # remove uneeded grub my be make stuck on boot #
     ################################################
     rm -vf /mnt/`cat $TMP/pout |  cut -b 6-9`/etc/grub.d/*xen
   #  rm -vf /etc/grub.d/*xen

    chroot /mnt/`cat $TMP/pout |  cut -b 6-9` /sbin/grub-mkconfig -o /boot/grub/grub.cfg
   # chroot /mnt/`cat $TMP/pout |  cut -b 6-9` /usr/sbin/grub-mkconfig -o /boot/grub/grub.cfg

  fi
  if [ `cat $TMP/part2` = "2" ] ; then

    dialog --clear --backtitle "$BACK_TITLE "  --title "-- INSTALLATION FINISHED -- " --colors --yesno "\n\n Now $LIVEKITNAME Installer has   finished the installation. Please reboot the system to boot  another distro for   generating new grub menu.\n\n Use   sudo grub-mkconfig -o /boot/grub/grub.cfg to generate grub menu " 10 90
      if [ $? = 0 ] ; then
	clear
	reboot
      fi
  fi
dialog --clear --backtitle "$BACK_TITLE "  --title "-- INSTALLATION FINISHED -- " --colors --yesno "\n\n Now $LIVEKITNAME Installer has finished the installation.\n\nPlease   reboot the system or continue testing  " 10 70
if [ $? = 0 ] ; then
clear
reboot
fi


}




run_() {
	greeting
	select_disk
	installtion_process
        tweaking
        grub_install

	

}



parse_options() {
	if [ $# -lt 1 ]; then
		print_help
	else
		while [ "$1" ]; do
			case "${1}" in
				--run)
					SETUP_RUN="yes"
                                        ;;
				-v|--version)
					echo "`basename ${COMMAND}` $VERSION"
					exit 0
					;;
				--cal)
					echo ""
					;;
				-h|--help)
					print_help
					exit 0
					;;
				*)
					echo "`basename ${COMMAND}`: invalid option $1"
					exit 1
					;;
			esac
			shift
		done
	fi
}

main () {
	parse_options "$@"
	ALL_LIST=$@

	
        if [ "$SETUP_RUN" == "yes" ]; then
		
		run_
               
	fi

}









########################
#### end of funtion ####
########################

parse_options "$@"

 main "$@"
